<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youmias.elephant.dao.TmpStudentMapper">
  <resultMap id="BaseResultScoreMap" type="com.youmias.elephant.po.TmpScore">
    <id column="c_id" property="cId"/>
    <id column="s_id" property="sId"/>
    <id column="s_score" property="sScore"/>
  </resultMap>

  <resultMap id="BaseResultMap" type="com.youmias.elephant.po.TmpStudent">
    <id column="s_id" jdbcType="VARCHAR" property="sId" />
    <result column="s_name" jdbcType="VARCHAR" property="sName" />
    <result column="s_birth" jdbcType="VARCHAR" property="sBirth" />
    <result column="s_sex" jdbcType="VARCHAR" property="sSex" />
    <!--collection:定义子对象集合映射-->
    <!--association:完成子对象的映射-->
    <!--property:子对象在父对象中的属性名-->
    <!--javaType:子对象的java类型-->
    <!--autoMapping:完成子对象的自动映射，若开启驼峰，则按驼峰匹配-->
    <collection property="scoreList" javaType="List" ofType="com.youmias.elephant.po.TmpScore" autoMapping="true" resultMap="BaseResultScoreMap"></collection>
  </resultMap>

  <sql id="Base_Column_List">
    s_id, s_name, s_birth, s_sex
  </sql>
  <select id="getSyStudent" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * from tmp_student stu
	LEFT JOIN tmp_score sco ON stu.s_id = sco.s_id WHERE stu.s_id = '01';
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tmp_student
    where s_id = #{sId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tmp_student
    where s_id = #{sId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.youmias.elephant.po.TmpStudent">
    insert into tmp_student (s_id, s_name, s_birth, 
      s_sex)
    values (#{sId,jdbcType=VARCHAR}, #{sName,jdbcType=VARCHAR}, #{sBirth,jdbcType=VARCHAR}, 
      #{sSex,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.youmias.elephant.po.TmpStudent">
    insert into tmp_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sId != null">
        s_id,
      </if>
      <if test="sName != null">
        s_name,
      </if>
      <if test="sBirth != null">
        s_birth,
      </if>
      <if test="sSex != null">
        s_sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sId != null">
        #{sId,jdbcType=VARCHAR},
      </if>
      <if test="sName != null">
        #{sName,jdbcType=VARCHAR},
      </if>
      <if test="sBirth != null">
        #{sBirth,jdbcType=VARCHAR},
      </if>
      <if test="sSex != null">
        #{sSex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youmias.elephant.po.TmpStudent">
    update tmp_student
    <set>
      <if test="sName != null">
        s_name = #{sName,jdbcType=VARCHAR},
      </if>
      <if test="sBirth != null">
        s_birth = #{sBirth,jdbcType=VARCHAR},
      </if>
      <if test="sSex != null">
        s_sex = #{sSex,jdbcType=VARCHAR},
      </if>
    </set>
    where s_id = #{sId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youmias.elephant.po.TmpStudent">
    update tmp_student
    set s_name = #{sName,jdbcType=VARCHAR},
      s_birth = #{sBirth,jdbcType=VARCHAR},
      s_sex = #{sSex,jdbcType=VARCHAR}
    where s_id = #{sId,jdbcType=VARCHAR}
  </update>
</mapper>